# Generated by Django 5.0.1 on 2024-02-18 18:35

import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import gyuser.models.base
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', gyuser.models.base.GyaanUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('email_init', models.EmailField(max_length=254, null=True, verbose_name='Initial Email Address')),
                ('phone', models.CharField(max_length=30, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('address', models.TextField(null=True)),
                ('photo_url', models.URLField(default=None, help_text='An optional image of the user', null=True)),
                ('alternate_phone', models.CharField(max_length=15, null=True)),
                ('locality', models.TextField(default=None, help_text='Verbose location of the user', null=True)),
                ('city', models.CharField(default=None, max_length=20, null=True)),
                ('preferred_languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5), default=None, help_text='Language codes of preferred languages in the order of preference', null=True, size=None)),
                ('countries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=None, null=True, size=None)),
                ('country_of_origin', models.CharField(default=None, max_length=100, null=True)),
                ('current_timezone', models.CharField(default=None, max_length=20, null=True)),
                ('timezones', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), default=None, null=True, size=None)),
                ('highest_education_qualification', models.CharField(default=None, max_length=15, null=True)),
                ('birthday', models.DateField(default=None, null=True)),
                ('year_of_completion', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_working', models.BooleanField(blank=True, null=True)),
                ('parent_or_guardian_name', models.CharField(max_length=30, null=True)),
                ('parent_or_guardian_email', models.EmailField(max_length=254, null=True)),
                ('parent_or_guardian_phone', models.CharField(default=None, max_length=15, null=True)),
                ('facebook_id', models.CharField(max_length=15, null=True, unique=True)),
                ('google_plus', models.CharField(max_length=15, null=True, unique=True)),
                ('linkedIn_id', models.CharField(max_length=15, null=True, unique=True)),
                ('twitter_id', models.CharField(max_length=15, null=True, unique=True)),
                ('github_id', models.CharField(max_length=15, null=True, unique=True)),
                ('exams_interested_in', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), default=None, null=True, size=None)),
                ('last_modified_by', models.IntegerField(blank=True, null=True)),
                ('last_updated_by', models.IntegerField(blank=True, null=True)),
                ('friends', models.ManyToManyField(default=None, help_text='Users a user has befriended on this platform', related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
